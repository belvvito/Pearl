import os
import django
import json
import random
import uuid  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç uuid
from datetime import datetime, timedelta
from django.utils import timezone
import pytz
from faker import Faker

def get_random_date():
    start_date = timezone.datetime(2023, 1, 1, tzinfo=timezone.utc)
    end_date = timezone.datetime(2025, 12, 31, tzinfo=timezone.utc)
    fake = Faker()
    return fake.date_time_between(
        start_date=start_date,
        end_date=end_date,
        tzinfo=timezone.utc
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞
def generate_article():
    return f"P{uuid.uuid4().hex[:8].upper()}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.hashers import make_password
from django.db import connection
from user.models import User, UserProfile
from products.models import Product
from orders.models import Order, OrderItem
from reviews.models import Review


def clear_all_data():
    """–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü"""
    Review.objects.all().delete()
    OrderItem.objects.all().delete()
    Order.objects.all().delete()
    Product.objects.all().delete()
    UserProfile.objects.all().delete()
    User.objects.all().delete()

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ ID –¥–ª—è PostgreSQL
    with connection.cursor() as cursor:
        cursor.execute("""
            SELECT sequence_name 
            FROM information_schema.sequences 
            WHERE sequence_name LIKE '%user%_id_seq' 
               OR sequence_name LIKE '%product%_id_seq'
               OR sequence_name LIKE '%order%_id_seq'
               OR sequence_name LIKE '%review%_id_seq'
        """)
        sequences = cursor.fetchall()

        for seq in sequences:
            cursor.execute(f"ALTER SEQUENCE {seq[0]} RESTART WITH 1")

    print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –æ—á–∏—â–µ–Ω—ã")


def generate_users(count=100):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    print(f"üë• –°–æ–∑–¥–∞–Ω–∏–µ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")

    users = []

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    admin = User.objects.create(
        username='admin',
        email='bellvika132@gmail.com',
        first_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        last_name='Pearl',
        phone='+79039949609',
        is_staff=True,
        is_superuser=True,
        is_active=True,
        password=make_password('admin')
    )
    UserProfile.objects.create(
        user=admin,
        bio='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–∞–≥–∞–∑–∏–Ω–∞ Pearl',
        city='–ú–æ—Å–∫–≤–∞',
        country='–†–æ—Å—Å–∏—è',
        address='–≥. –ú–æ—Å–∫–≤–∞, –±-—Ä –°–∏—Ä–µ–Ω–µ–≤—ã–π, –¥. 53',
        postal_code='123456',
        newsletter_subscription=True
    )
    users.append(admin)

    # –û–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    first_names = ['–ê–Ω–Ω–∞', '–ú–∞—Ä–∏—è', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', '–û–ª—å–≥–∞', '–ò—Ä–∏–Ω–∞', '–ù–∞—Ç–∞–ª—å—è', '–°–≤–µ—Ç–ª–∞–Ω–∞', '–Æ–ª–∏—è', '–ï–ª–µ–Ω–∞', '–¢–∞—Ç—å—è–Ω–∞']
    last_names = ['–ò–≤–∞–Ω–æ–≤–∞', '–ü–µ—Ç—Ä–æ–≤–∞', '–°–∏–¥–æ—Ä–æ–≤–∞', '–ö—É–∑–Ω–µ—Ü–æ–≤–∞', '–°–º–∏—Ä–Ω–æ–≤–∞', '–ü–æ–ø–æ–≤–∞', '–õ–µ–±–µ–¥–µ–≤–∞', '–ö–æ–∑–ª–æ–≤–∞',
                  '–ù–æ–≤–∏–∫–æ–≤–∞', '–ú–æ—Ä–æ–∑–æ–≤–∞']
    cities = ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ö–∞–∑–∞–Ω—å', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥', '–ß–µ–ª—è–±–∏–Ω—Å–∫',
              '–°–∞–º–∞—Ä–∞', '–û–º—Å–∫', '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É']

    for i in range(1, count):
        user = User.objects.create(
            username=f'user_{i}',
            email=f'user{i}@mail.ru',
            first_name=random.choice(first_names),
            last_name=random.choice(last_names),
            phone=f'+79{random.randint(100000000, 999999999)}',
            is_staff=False,
            is_superuser=False,
            is_active=True,
            password=make_password('testpass123'),
            date_joined=timezone.now() - timedelta(days=random.randint(1, 365))
        )

        UserProfile.objects.create(
            user=user,
            bio=random.choice([
                '–õ—é–±–ª—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∫–æ—Å–º–µ—Ç–∏–∫—É',
                '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –ó–æ–ª–æ—Ç–æ–≥–æ –Ø–±–ª–æ–∫–∞',
                '–ò—â—É –ª—É—á—à–∏–µ —É—Ö–æ–¥–æ–≤—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞',
                '–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –ª—é–∫—Å–æ–≤—ã–µ –±—Ä–µ–Ω–¥—ã',
                '–¢–µ—Å—Ç–∏—Ä—É—é –Ω–æ–≤–∏–Ω–∫–∏ –∫–æ—Å–º–µ—Ç–∏–∫–∏'
            ]),
            city=random.choice(cities),
            country='–†–æ—Å—Å–∏—è',
            address=f'–≥. {random.choice(cities)}, –±-—Ä. –°–∏—Ä–µ–Ω–µ–≤—ã–π, –¥. {random.randint(1, 100)}',
            postal_code=f'{random.randint(100000, 199999)}',
            newsletter_subscription=random.choice([True, False])
        )
        users.append(user)

    return users


def generate_products(count=1000):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"""
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ {count} —Ç–æ–≤–∞—Ä–æ–≤...")

    products = []
    categories = ['Makeup', 'Skin care', 'Hair care', 'Perfumery', 'Accessories']

    brands = [
        'L\'OR√âAL PARIS', 'MAYBELLINE NEW YORK', 'NYX PROFESSIONAL MAKEUP', 'GARNIER',
        'LA ROCHE-POSAY', 'VICHY', 'BIODERMA', 'CERAVE', 'LANC√îME', 'DIOR',
        'CHANEL', 'EST√âE LAUDER', 'CLINIQUE', 'CLARINS', 'SHISEIDO', 'THE ORDINARY'
    ]

    # URL-–∞–¥—Ä–µ—Å–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ—Å–º–µ—Ç–∏–∫–∏ (–ø—Ä–∏–º–µ—Ä—ã)
    product_images = {
        'Makeup': [
            'https://images.unsplash.com/photo-1571781926291-c477ebfd024b?w=500',
            'https://images.unsplash.com/photo-1586495777744-4413f21062fa?w=500',
            'https://images.unsplash.com/photo-1526045478516-99145907023c?w=500',
            'https://images.unsplash.com/photo-1596462502278-27bfdc403348?w=500',
            'https://images.unsplash.com/photo-1629196914375-4e02c5c5d6fd?w=500'
        ],
        'Skin care': [
            'https://images.unsplash.com/photo-1556228578-8c89e6adf883?w=500',
            'https://images.unsplash.com/photo-1556228577-8ed324c4f5ab?w=500',
            'https://images.unsplash.com/photo-1556228579-35f4bdb5a8ff?w=500',
            'https://images.unsplash.com/photo-1590439471364-192aa70c0b53?w=500',
            'https://images.unsplash.com/photo-1631729670470-1df5e9888c15?w=500'
        ],
        'Hair care': [
            'https://images.unsplash.com/photo-1608248543803-ba4f8c70ae0b?w=500',
            'https://images.unsplash.com/photo-1560066984-138dadb4c035?w=500',
            'https://images.unsplash.com/photo-1591369822096-ffd140ec948f?w=500',
            'https://images.unsplash.com/photo-1560743173-567a3b5658b1?w=500',
            'https://images.unsplash.com/photo-1580618672591-eb180b1a973f?w=500'
        ],
        'Perfumery': [
            'https://images.unsplash.com/photo-1541643600914-78b084683601?w=500',
            'https://images.unsplash.com/photo-1590736968-d14609d5bbe5?w=500',
            'https://images.unsplash.com/photo-1590736968-d14609d5bbe5?w=500',
            'https://images.unsplash.com/photo-1590736968-d14609d5bbe5?w=500',
            'https://images.unsplash.com/photo-1592945403244-b3fbafd7f539?w=500'
        ],
        'Accessories': [
            'https://images.unsplash.com/photo-1589666564452-e94edaddd8f5?w=500',
            'https://images.unsplash.com/photo-1589666561899-8c8b45c8c859?w=500',
            'https://images.unsplash.com/photo-1594223274512-ad4803739b7c?w=500',
            'https://images.unsplash.com/photo-1560890721-84ec0e9d8dcb?w=500',
            'https://images.unsplash.com/photo-1594223274512-ad4803739b7c?w=500'
        ]
    }

    product_types = {
        'Makeup': ['–¢–æ–Ω–∞–ª—å–Ω—ã–π –∫—Ä–µ–º', '–ü—É–¥—Ä–∞', '–ö–æ–Ω—Å–∏–ª–µ—Ä', '–†—É–º—è–Ω–∞', '–¢—É—à—å', '–ü–æ–º–∞–¥–∞', '–¢–µ–Ω–∏'],
        'Skin care': ['–ö—Ä–µ–º', '–°—ã–≤–æ—Ä–æ—Ç–∫–∞', '–ú–∞—Å–∫–∞', '–û—á–∏—â–∞—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ', '–¢–æ–Ω–∏–∫', '–°–∫—Ä–∞–±'],
        'Hair care': ['–®–∞–º–ø—É–Ω—å', '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', '–ú–∞—Å–∫–∞', '–ú–∞—Å–ª–æ', '–°–ø—Ä–µ–π', '–°—ã–≤–æ—Ä–æ—Ç–∫–∞'],
        'Perfumery': ['–¢—É–∞–ª–µ—Ç–Ω–∞—è –≤–æ–¥–∞', '–ü–∞—Ä—Ñ—é–º–µ—Ä–Ω–∞—è –≤–æ–¥–∞', '–î—É—Ö–∏', '–û–¥–µ–∫–æ–ª–æ–Ω'],
        'Accessories': ['–ö–∏—Å—Ç–∏', '–°–ø–æ–Ω–∂–∏', '–ó–µ—Ä–∫–∞–ª–æ', '–†–∞—Å—á–µ—Å–∫–∞', '–ö–æ—Å–º–µ—Ç–∏—á–∫–∞']
    }

    for i in range(count):
        category = random.choice(categories)
        product_type = random.choice(product_types[category])
        brand = random.choice(brands)

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        image_url = random.choice(product_images[category])

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ü–µ–Ω—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if category == 'Perfumery':
            price = random.randint(2000, 15000)
        elif category == 'Skin care':
            price = random.randint(800, 8000)
        elif category == 'Makeup':
            price = random.randint(300, 5000)
        elif category == 'Hair care':
            price = random.randint(400, 6000)
        else:
            price = random.randint(200, 3000)

        product = Product.objects.create(
            name=f"{brand} {product_type}",
            description=f"–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π {product_type.lower()} –æ—Ç {brand}. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.",
            price=price,
            category=category,
            article=generate_article(),
            stock_quantity=random.randint(0, 200),
            is_available=random.choice([True, True, True, False]),
            weight=round(random.uniform(10, 500), 2),
            image=image_url,  # –î–æ–±–∞–≤–ª—è–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            created_at=timezone.now() - timedelta(days=random.randint(1, 180))
        )
        products.append(product)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä {len(products)}/{count}: {product.article}")

    return products


def generate_orders(users, products, count=500):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤"""
    print(f"üìã –°–æ–∑–¥–∞–Ω–∏–µ {count} –∑–∞–∫–∞–∑–æ–≤...")

    orders = []
    statuses = ['pending', 'processing', 'shipped', 'delivered', 'cancelled']
    payment_statuses = ['pending', 'paid', 'failed']

    cities = ['–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ö–∞–∑–∞–Ω—å']
    streets = ['–õ–µ–Ω–∏–Ω–∞', '–ü—É—à–∫–∏–Ω–∞', '–ì–∞–≥–∞—Ä–∏–Ω–∞', '–°–æ–≤–µ—Ç—Å–∫–∞—è', '–ú–∏—Ä–∞']

    for i in range(count):
        user = random.choice(users)
        order_number = generate_article()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤
        status = random.choice(statuses)
        payment_status = random.choice(payment_statuses)
        city = random.choice(cities)

        order = Order.objects.create(
            user=user,
            order_number=order_number,
            status=status,
            payment_status=payment_status,
            shipping_address=f"–≥. {city}, —É–ª. {random.choice(streets)}, –¥. {random.randint(1, 100)}, –∫–≤. {random.randint(1, 150)}",
            customer_notes=random.choice([
                '–ü–æ–∑–≤–æ–Ω–∏—Ç—å –ø–µ—Ä–µ–¥ –¥–æ—Å—Ç–∞–≤–∫–æ–π',
                '–û—Å—Ç–∞–≤–∏—Ç—å —É –¥–≤–µ—Ä–∏',
                '–î–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ 18:00',
                ''
            ]),
            customer_email=user.email,
            customer_phone=user.phone,
            total_amount=0,
            created_at=datetime.now() - timedelta(days=random.randint(1, 90))
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–∞
        order_items_count = random.randint(1, 5)
        order_total = 0
        selected_products = random.sample(products, order_items_count)

        for product in selected_products:
            quantity = random.randint(1, 3)
            unit_price = product.price
            subtotal = unit_price * quantity

            OrderItem.objects.create(
                order=order,
                product=product,
                quantity=quantity,
                unit_price=unit_price,
                subtotal=subtotal
            )

            order_total += subtotal

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞
        order.total_amount = order_total
        order.save()

        orders.append(order)

    return orders


def generate_reviews(users, products, orders):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤"""
    print("‚≠ê –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤...")

    reviews_data = [
        {'rating': 5, 'title': '–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç!', 'comment': '–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω –ø–æ–∫—É–ø–∫–æ–π, –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å–æ—Ç–µ.'},
        {'rating': 4, 'title': '–•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ', 'comment': '–¢–æ–≤–∞—Ä —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—é, –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã—Å—Ç—Ä–∞—è.'},
        {'rating': 3, 'title': '–ù–æ—Ä–º–∞–ª—å–Ω–æ', 'comment': '–ù–µ–ø–ª–æ—Ö–æ–π —Ç–æ–≤–∞—Ä –∑–∞ —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏, –Ω–æ –µ—Å—Ç—å –Ω–µ–¥–æ—á–µ—Ç—ã.'},
        {'rating': 5, 'title': '–í–æ—Å—Ç–æ—Ä–≥!', 'comment': '–ü—Ä–µ–≤–∑–æ—à–µ–ª –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫—É–ø–ª—é –µ—â–µ.'},
        {'rating': 2, 'title': '–†–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω', 'comment': '–ù–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω–æ–º—É –∫–∞—á–µ—Å—Ç–≤—É.'}
    ]

    # –°–æ–∑–¥–∞–µ–º –æ—Ç–∑—ã–≤—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    delivered_orders = [order for order in orders if order.status == 'delivered']
    review_count = 0

    for order in delivered_orders[:200]:  # –û—Ç–∑—ã–≤—ã –¥–ª—è 200 –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
        for order_item in order.items.all():
            if random.choice([True, False]):  # 50% —à–∞–Ω—Å –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                review_data = random.choice(reviews_data)

                Review.objects.create(
                    user=order.user,
                    product=order_item.product,
                    order=order,
                    rating=review_data['rating'],
                    title=review_data['title'],
                    comment=review_data['comment'],
                    is_approved=random.choice([True, False]),
                    created_at=order.created_at + timedelta(days=random.randint(1, 7))
                )
                review_count += 1

    return review_count


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    try:
        # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        clear_all_data()

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        users = generate_users(100)
        products = generate_products(1000)
        orders = generate_orders(users, products, 500)
        review_count = generate_reviews(users, products, orders)

        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\n‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
        print(f"   üë§ –ü—Ä–æ—Ñ–∏–ª–µ–π: {UserProfile.objects.count()}")
        print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤: {Product.objects.count()}")
        print(f"   üìã –ó–∞–∫–∞–∑–æ–≤: {Order.objects.count()}")
        print(f"   üì¶ –ü–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤: {OrderItem.objects.count()}")
        print(f"   ‚≠ê –û—Ç–∑—ã–≤–æ–≤: {review_count}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    main()